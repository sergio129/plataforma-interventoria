import { connectToDatabase, db } from '../lib/database';
import { Usuario, TipoUsuario, EstadoUsuario } from '../lib/models/Usuario';
import { Proyecto, TipoProyecto, EstadoProyecto, PrioridadProyecto } from '../lib/models/Proyecto';
import bcrypt from 'bcryptjs';

class DataInitializer {
  async initialize(): Promise<void> {
    try {
      console.log('üöÄ Iniciando inicializaci√≥n de datos...');
      
      // Conectar a la base de datos
      await connectToDatabase();
      
      // Limpiar base de datos existente (solo en desarrollo)
      if (process.env.NODE_ENV !== 'production') {
        await this.clearDatabase();
      }
      
      // Crear datos de ejemplo
      await this.createSampleUsers();
      await this.createSampleProjects();
      
      // Crear √≠ndices
      await db.createIndexes();
      
      // Mostrar estad√≠sticas
      await this.showStatistics();
      
      console.log('‚úÖ Inicializaci√≥n completada exitosamente');
      
    } catch (error) {
      console.error('‚ùå Error durante la inicializaci√≥n:', error);
      throw error;
    }
  }

  private async clearDatabase(): Promise<void> {
    console.log('üóëÔ∏è  Limpiando base de datos...');
    await db.clearDatabase();
  }

  private async createSampleUsers(): Promise<void> {
    console.log('üë• Creando usuarios de ejemplo...');

    const hashedPassword = await bcrypt.hash('123456', 10);

    const usuarios = [
      {
        nombre: 'Juan Carlos',
        apellido: 'Rodr√≠guez',
        email: 'admin@interventoria.com',
        password: hashedPassword,
        telefono: '+57 300 123 4567',
        cedula: '12345678',
        tipoUsuario: TipoUsuario.ADMINISTRADOR,
        estado: EstadoUsuario.ACTIVO,
        profesion: 'Ingeniero Civil',
        experiencia: '15 a√±os en interventor√≠a de obras civiles',
        certificaciones: ['PMP', 'Interventor√≠a INVIAS', 'Especializaci√≥n en Gerencia de Proyectos']
      },
      {
        nombre: 'Mar√≠a Elena',
        apellido: 'Gonz√°lez',
        email: 'interventor@interventoria.com',
        password: hashedPassword,
        telefono: '+57 310 987 6543',
        cedula: '87654321',
        tipoUsuario: TipoUsuario.INTERVENTOR,
        estado: EstadoUsuario.ACTIVO,
        profesion: 'Arquitecta',
        experiencia: '12 a√±os en supervisi√≥n y control de obras',
        certificaciones: ['Interventor√≠a INVIAS', 'Especializaci√≥n en Construcci√≥n Sostenible']
      },
      {
        nombre: 'Carlos Alberto',
        apellido: 'Mendoza',
        email: 'contratista@interventoria.com',
        password: hashedPassword,
        telefono: '+57 320 456 7890',
        cedula: '11223344',
        tipoUsuario: TipoUsuario.CONTRATISTA,
        estado: EstadoUsuario.ACTIVO,
        profesion: 'Ingeniero Civil',
        experiencia: '10 a√±os en ejecuci√≥n de proyectos de infraestructura',
        certificaciones: ['Registro Nacional de Constructores', 'ISO 9001']
      },
      {
        nombre: 'Ana Sof√≠a',
        apellido: 'Herrera',
        email: 'supervisor@interventoria.com',
        password: hashedPassword,
        telefono: '+57 315 234 5678',
        cedula: '55667788',
        tipoUsuario: TipoUsuario.SUPERVISOR,
        estado: EstadoUsuario.ACTIVO,
        profesion: 'Ingeniera Industrial',
        experiencia: '8 a√±os en supervisi√≥n de proyectos',
        certificaciones: ['Six Sigma Green Belt', 'Project Management']
      }
    ];

    const usuariosCreados = await Usuario.insertMany(usuarios);
    console.log(`‚úÖ ${usuariosCreados.length} usuarios creados`);
    
    return;
  }

  private async createSampleProjects(): Promise<void> {
    console.log('üèóÔ∏è  Creando proyectos de ejemplo...');

    // Obtener usuarios para asignar a proyectos
    const admin = await Usuario.findOne({ tipoUsuario: TipoUsuario.ADMINISTRADOR });
    const interventor = await Usuario.findOne({ tipoUsuario: TipoUsuario.INTERVENTOR });
    const contratista = await Usuario.findOne({ tipoUsuario: TipoUsuario.CONTRATISTA });
    const supervisor = await Usuario.findOne({ tipoUsuario: TipoUsuario.SUPERVISOR });

    if (!admin || !interventor || !contratista || !supervisor) {
      throw new Error('No se encontraron todos los tipos de usuario necesarios');
    }

    const proyectos = [
      {
        codigo: 'CONST-2024-001',
        nombre: 'Construcci√≥n Edificio Administrativo',
        descripcion: 'Construcci√≥n de edificio administrativo de 5 pisos con √°rea de 2,500 m¬≤ para entidad gubernamental',
        tipoProyecto: TipoProyecto.CONSTRUCCION,
        estado: EstadoProyecto.EN_EJECUCION,
        prioridad: PrioridadProyecto.ALTA,
        fechaInicio: new Date('2024-01-15'),
        fechaFinPlaneada: new Date('2024-12-30'),
        ubicacion: {
          direccion: 'Carrera 15 # 32-45',
          ciudad: 'Bogot√°',
          departamento: 'Cundinamarca',
          pais: 'Colombia',
          coordenadas: {
            latitud: 4.6097,
            longitud: -74.0817
          }
        },
        contratista: contratista._id,
        interventor: interventor._id,
        supervisor: supervisor._id,
        contactoCliente: {
          nombre: 'Roberto Silva',
          cargo: 'Director de Infraestructura',
          telefono: '+57 301 456 7890',
          email: 'rsilva@entidad.gov.co'
        },
        presupuesto: {
          valorTotal: 5500000000, // 5,500 millones COP
          valorEjecutado: 2200000000, // 2,200 millones COP
          moneda: 'COP',
          fechaAprobacion: new Date('2023-12-01')
        },
        porcentajeAvance: 40,
        hitos: [
          {
            nombre: 'Dise√±os y permisos',
            descripcion: 'Completar dise√±os arquitect√≥nicos y obtener licencias',
            fechaPlaneada: new Date('2024-02-28'),
            fechaReal: new Date('2024-02-25'),
            completado: true,
            porcentajeAvance: 100
          },
          {
            nombre: 'Cimentaci√≥n',
            descripcion: 'Excavaci√≥n y construcci√≥n de cimientos',
            fechaPlaneada: new Date('2024-04-30'),
            fechaReal: new Date('2024-04-28'),
            completado: true,
            porcentajeAvance: 100
          },
          {
            nombre: 'Estructura',
            descripcion: 'Construcci√≥n de estructura en concreto',
            fechaPlaneada: new Date('2024-08-31'),
            completado: false,
            porcentajeAvance: 60
          },
          {
            nombre: 'Acabados',
            descripcion: 'Instalaciones y acabados finales',
            fechaPlaneada: new Date('2024-11-30'),
            completado: false,
            porcentajeAvance: 0
          }
        ],
        creadoPor: admin._id,
        tags: ['construccion', 'edificio', 'gubernamental', 'bogota'],
        observaciones: 'Proyecto prioritario con seguimiento semanal requerido'
      },
      {
        codigo: 'INFRA-2024-002',
        nombre: 'Mejoramiento V√≠a Departamental',
        descripcion: 'Mejoramiento y pavimentaci√≥n de 25 km de v√≠a departamental incluyendo obras de drenaje',
        tipoProyecto: TipoProyecto.INFRAESTRUCTURA,
        estado: EstadoProyecto.PLANIFICACION,
        prioridad: PrioridadProyecto.MEDIA,
        fechaInicio: new Date('2024-03-01'),
        fechaFinPlaneada: new Date('2024-10-31'),
        ubicacion: {
          direccion: 'V√≠a Municipal KM 0+000 - KM 25+000',
          ciudad: 'Villavicencio',
          departamento: 'Meta',
          pais: 'Colombia'
        },
        contratista: contratista._id,
        interventor: interventor._id,
        contactoCliente: {
          nombre: 'Luis Fernando Morales',
          cargo: 'Secretario de Obras P√∫blicas',
          telefono: '+57 318 765 4321',
          email: 'lmorales@meta.gov.co'
        },
        presupuesto: {
          valorTotal: 8500000000, // 8,500 millones COP
          valorEjecutado: 0,
          moneda: 'COP',
          fechaAprobacion: new Date('2024-01-15')
        },
        porcentajeAvance: 15,
        hitos: [
          {
            nombre: 'Estudios y dise√±os',
            descripcion: 'Estudios topogr√°ficos, geot√©cnicos y dise√±os viales',
            fechaPlaneada: new Date('2024-04-15'),
            completado: false,
            porcentajeAvance: 80
          },
          {
            nombre: 'Movimiento de tierras',
            descripcion: 'Excavaci√≥n, corte y relleno',
            fechaPlaneada: new Date('2024-06-30'),
            completado: false,
            porcentajeAvance: 0
          },
          {
            nombre: 'Pavimentaci√≥n',
            descripcion: 'Base granular y carpeta asf√°ltica',
            fechaPlaneada: new Date('2024-09-15'),
            completado: false,
            porcentajeAvance: 0
          }
        ],
        creadoPor: admin._id,
        tags: ['infraestructura', 'via', 'pavimentacion', 'meta'],
        observaciones: 'Requiere coordinaci√≥n con comunidades locales'
      },
      {
        codigo: 'TECH-2024-003',
        nombre: 'Implementaci√≥n Sistema de Gesti√≥n',
        descripcion: 'Desarrollo e implementaci√≥n de sistema de gesti√≥n documental para entidad p√∫blica',
        tipoProyecto: TipoProyecto.TECNOLOGIA,
        estado: EstadoProyecto.EN_EJECUCION,
        prioridad: PrioridadProyecto.CRITICA,
        fechaInicio: new Date('2024-02-01'),
        fechaFinPlaneada: new Date('2024-08-31'),
        ubicacion: {
          direccion: 'Carrera 7 # 26-20',
          ciudad: 'Bogot√°',
          departamento: 'Cundinamarca',
          pais: 'Colombia'
        },
        contratista: contratista._id,
        interventor: interventor._id,
        supervisor: supervisor._id,
        contactoCliente: {
          nombre: 'Patricia Jim√©nez',
          cargo: 'Directora de Sistemas',
          telefono: '+57 312 987 6543',
          email: 'pjimenez@entidad.gov.co'
        },
        presupuesto: {
          valorTotal: 1200000000, // 1,200 millones COP
          valorEjecutado: 720000000, // 720 millones COP
          moneda: 'COP',
          fechaAprobacion: new Date('2023-11-20')
        },
        porcentajeAvance: 60,
        hitos: [
          {
            nombre: 'An√°lisis de requisitos',
            descripcion: 'Levantamiento y an√°lisis de requisitos funcionales',
            fechaPlaneada: new Date('2024-03-15'),
            fechaReal: new Date('2024-03-10'),
            completado: true,
            porcentajeAvance: 100
          },
          {
            nombre: 'Desarrollo',
            descripcion: 'Desarrollo de m√≥dulos del sistema',
            fechaPlaneada: new Date('2024-06-30'),
            completado: false,
            porcentajeAvance: 80
          },
          {
            nombre: 'Implementaci√≥n',
            descripcion: 'Despliegue y puesta en producci√≥n',
            fechaPlaneada: new Date('2024-08-31'),
            completado: false,
            porcentajeAvance: 20
          }
        ],
        creadoPor: admin._id,
        tags: ['tecnologia', 'sistema', 'gestion', 'software'],
        observaciones: 'Proyecto cr√≠tico para modernizaci√≥n de procesos'
      }
    ];

    const proyectosCreados = await Proyecto.insertMany(proyectos);
    console.log(`‚úÖ ${proyectosCreados.length} proyectos creados`);
  }

  private async showStatistics(): Promise<void> {
    console.log('\nüìä ESTAD√çSTICAS DE LA BASE DE DATOS');
    console.log('='.repeat(40));
    
    const stats = await db.getDatabaseStats();
    console.log(`üìÇ Base de datos: ${stats.databaseName}`);
    console.log(`üìÅ Colecciones: ${stats.collections}`);
    console.log(`üìÑ Documentos totales: ${stats.objects}`);
    console.log(`üíæ Tama√±o de datos: ${(stats.dataSize / 1024 / 1024).toFixed(2)} MB`);
    console.log(`üóÉÔ∏è  Tama√±o de almacenamiento: ${(stats.storageSize / 1024 / 1024).toFixed(2)} MB`);
    console.log(`üè∑Ô∏è  Tama√±o de √≠ndices: ${(stats.indexSize / 1024 / 1024).toFixed(2)} MB`);
    
    // Contar documentos por colecci√≥n
    const usuariosCount = await Usuario.countDocuments();
    const proyectosCount = await Proyecto.countDocuments();
    
    console.log(`\nüìã Documentos por colecci√≥n:`);
    console.log(`   üë• Usuarios: ${usuariosCount}`);
    console.log(`   üèóÔ∏è  Proyectos: ${proyectosCount}`);
  }
}

// Funci√≥n principal
async function main(): Promise<void> {
  const initializer = new DataInitializer();
  
  try {
    await initializer.initialize();
  } catch (error) {
    console.error('‚ùå Error en la inicializaci√≥n:', error);
    process.exit(1);
  } finally {
    // Cerrar conexi√≥n
    await db.disconnect();
    process.exit(0);
  }
}

// Ejecutar si es llamado directamente
if (require.main === module) {
  main().catch(console.error);
}

export { DataInitializer };